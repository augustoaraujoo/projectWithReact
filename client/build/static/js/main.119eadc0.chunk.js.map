{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","name","setName","age","setAge","country","setCountry","position","setPosition","wage","setWage","newWage","setNewWage","employeeList","setEmployeeList","className","type","onChange","event","target","value","onClick","Axios","post","then","get","response","data","map","val","key","placeholder","id","put","delete","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.119eadc0.chunk.js","sourcesContent":["import \"./App.css\";\nimport { useState } from \"react\";\nimport Axios from \"axios\";\n\nfunction App() {\n  const [name, setName] = useState(\"\");\n  const [age, setAge] = useState(0);\n  const [country, setCountry] = useState(\"\");\n  const [position, setPosition] = useState(\"\");\n  const [wage, setWage] = useState(0);\n  const [newWage, setNewWage] = useState(0);\n  const [employeeList, setEmployeeList] = useState([]);\n  \n  const addEmployee = () => {\n    Axios.post(\"http://localhost:3001/create\", {\n      name: name,\n      age: age,\n      country: country,\n      position: position,\n      wage: wage,\n    }).then(() => {\n      setEmployeeList([\n        ...employeeList,\n        {\n          name: name,\n          age: age,\n          country: country,\n          position: position,\n          wage: wage,\n        },\n      ]);\n    });\n  };\n\n  const getEmployees = () => {\n    Axios.get(\"http://localhost:3001/employees\").then((response) => {\n      setEmployeeList(response.data);\n    });\n  };\n\n  const updateEmployeeWage = (id) => {\n    Axios.put(\"http://localhost:3001/update\", { wage: newWage, id: id }).then(\n      (response) => {\n        setEmployeeList(\n          employeeList.map((val) => {\n            return val.id === id\n              ? {\n                  id: val.id,\n                  name: val.name,\n                  country: val.country,\n                  age: val.age,\n                  position: val.position,\n                  wage: newWage,\n                }\n              : val;\n          })\n        );\n      }\n    );\n  };\n\n  const deleteEmployee = (id) => {\n    Axios.delete(`http://localhost:3001/delete/${id}`).then((response) => {\n      setEmployeeList(\n        employeeList.filter((val) => {\n          return val.id !== id;\n        })\n      );\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"information\">\n        <label>Name:</label>\n        <input\n          type=\"text\"\n          onChange={(event) => {\n            setName(event.target.value);\n          }}\n        />\n        <label>Age:</label>\n        <input\n          type=\"number\"\n          onChange={(event) => {\n            setAge(event.target.value);\n          }}\n        />\n        <label>Country:</label>\n        <input\n          type=\"text\"\n          onChange={(event) => {\n            setCountry(event.target.value);\n          }}\n        />\n        <label>Position:</label>\n        <input\n          type=\"text\"\n          onChange={(event) => {\n            setPosition(event.target.value);\n          }}\n        />\n        <label>Wage (year):</label>\n        <input\n          type=\"number\"\n          onChange={(event) => {\n            setWage(event.target.value);\n          }}\n        />\n        <button onClick={addEmployee}>Add Employee</button>\n      </div>\n      <div className=\"employees\">\n        <button onClick={getEmployees}>Show Employees</button>\n\n        {employeeList.map((val, key) => {\n          return (\n            <div className=\"employee\">\n              <div>\n                <h3>Name: {val.name}</h3>\n                <h3>Age: {val.age}</h3>\n                <h3>Country: {val.country}</h3>\n                <h3>Position: {val.position}</h3>\n                <h3>Wage: {val.wage}</h3>\n              </div>\n              <div>\n                <input\n                  type=\"text\"\n                  placeholder=\"2000...\"\n                  onChange={(event) => {\n                    setNewWage(event.target.value);\n                  }}\n                />\n                <button\n                  onClick={() => {\n                    updateEmployeeWage(val.id);\n                  }}\n                >\n                  {\" \"}\n                  Update\n                </button>\n\n                <button\n                  onClick={() => {\n                    deleteEmployee(val.id);\n                  }}\n                >\n                  Delete\n                </button>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}